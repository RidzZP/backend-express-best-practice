paths:
    /api/v1/dashboard1/auth/login:
        post:
            tags:
                - Authentication
            summary: User Login
            description: Authenticate user with email/username and password
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                    description: Email or username
                                    example: "test@example.com"
                                password:
                                    type: string
                                    format: password
                                    description: User password
                                    example: "password123"
            responses:
                "200":
                    description: Login berhasil
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                        example: "success"
                                    message:
                                        type: string
                                        example: "Login berhasil"
                                    data:
                                        type: object
                                        properties:
                                            user:
                                                $ref: "#/components/schemas/User"
                                            token:
                                                type: string
                                                description: JWT access token
                                                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                            token_type:
                                                type: string
                                                description: Authorization type
                                                example: "Bearer"
                                            expires_in:
                                                type: string
                                                description: expires in
                                                example: "24h"
                "400":
                    $ref: "#/components/responses/ValidationError"
                "401":
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                status: "error"
                                message: "Invalid credentials"
                                error_code: "AUTH_INVALID_CREDENTIALS"
                                timestamp: "2025-01-03T10:30:00Z"
                "429":
                    description: Too many login attempts
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                            example:
                                status: "error"
                                message: "Too many login attempts, please try again later"
                                error_code: "AUTH_RATE_LIMIT"
                                timestamp: "2025-01-03T10:30:00Z"
                "500":
                    $ref: "#/components/responses/ServerError"

    # /api/v1/auth/register:
    #     post:
    #         tags:
    #             - Authentication
    #         summary: User Registration
    #         description: Register a new user account
    #         requestBody:
    #             required: true
    #             content:
    #                 application/json:
    #                     schema:
    #                         type: object
    #                         required:
    #                             - username
    #                             - email
    #                             - password
    #                             - password_confirmation
    #                         properties:
    #                             username:
    #                                 type: string
    #                                 minLength: 3
    #                                 maxLength: 50
    #                                 pattern: "^[a-zA-Z0-9_]+$"
    #                                 description: Unique username (alphanumeric and underscore only)
    #                                 example: "john_doe"
    #                             email:
    #                                 type: string
    #                                 format: email
    #                                 description: User email address
    #                                 example: "john@example.com"
    #                             password:
    #                                 type: string
    #                                 format: password
    #                                 minLength: 8
    #                                 description: Password (minimum 8 characters)
    #                                 example: "password123"
    #                             password_confirmation:
    #                                 type: string
    #                                 format: password
    #                                 description: Password confirmation (must match password)
    #                                 example: "password123"
    #                             full_name:
    #                                 type: string
    #                                 maxLength: 100
    #                                 description: User's full name
    #                                 example: "John Doe"
    #                             phone:
    #                                 type: string
    #                                 pattern: '^[+]?[0-9\s\-\(\)]+$'
    #                                 description: Phone number
    #                                 example: "+1234567890"
    #         responses:
    #             "201":
    #                 description: Registration successful
    #                 content:
    #                     application/json:
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 status:
    #                                     type: string
    #                                     example: "success"
    #                                 message:
    #                                     type: string
    #                                     example: "User registered successfully"
    #                                 data:
    #                                     type: object
    #                                     properties:
    #                                         user:
    #                                             $ref: "#/components/schemas/User"
    #                                         verification_sent:
    #                                             type: boolean
    #                                             description: Whether verification email was sent
    #                                             example: true
    #                                 timestamp:
    #                                     type: string
    #                                     format: date-time
    #                                     example: "2025-01-03T10:30:00Z"
    #             "400":
    #                 $ref: "#/components/responses/ValidationError"
    #             "409":
    #                 description: User already exists
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/Error"
    #                         example:
    #                             status: "error"
    #                             message: "User with this email already exists"
    #                             error_code: "AUTH_USER_EXISTS"
    #                             timestamp: "2025-01-03T10:30:00Z"
    #             "500":
    #                 $ref: "#/components/responses/ServerError"

    # /api/v1/auth/logout:
    #     post:
    #         tags:
    #             - Authentication
    #         summary: User Logout
    #         description: Logout user and invalidate token
    #         security:
    #             - BearerAuth: []
    #         responses:
    #             "200":
    #                 description: Logout successful
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/Success"
    #                         example:
    #                             status: "success"
    #                             message: "Logout successful"
    #                             timestamp: "2025-01-03T10:30:00Z"
    #             "401":
    #                 $ref: "#/components/responses/UnauthorizedError"
    #             "500":
    #                 $ref: "#/components/responses/ServerError"

    # /api/v1/auth/refresh:
    #     post:
    #         tags:
    #             - Authentication
    #         summary: Refresh Access Token
    #         description: Refresh expired access token using refresh token
    #         requestBody:
    #             required: true
    #             content:
    #                 application/json:
    #                     schema:
    #                         type: object
    #                         required:
    #                             - refresh_token
    #                         properties:
    #                             refresh_token:
    #                                 type: string
    #                                 description: Valid refresh token
    #                                 example: "rt_abc123def456..."
    #         responses:
    #             "200":
    #                 description: Token refreshed successfully
    #                 content:
    #                     application/json:
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 status:
    #                                     type: string
    #                                     example: "success"
    #                                 message:
    #                                     type: string
    #                                     example: "Token refreshed successfully"
    #                                 data:
    #                                     type: object
    #                                     properties:
    #                                         token:
    #                                             type: string
    #                                             description: New JWT access token
    #                                             example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
    #                                         expires_in:
    #                                             type: integer
    #                                             description: Token expiration time in seconds
    #                                             example: 3600
    #                                 timestamp:
    #                                     type: string
    #                                     format: date-time
    #                                     example: "2025-01-03T10:30:00Z"
    #             "400":
    #                 $ref: "#/components/responses/ValidationError"
    #             "401":
    #                 description: Invalid or expired refresh token
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/Error"
    #                         example:
    #                             status: "error"
    #                             message: "Invalid or expired refresh token"
    #                             error_code: "AUTH_INVALID_REFRESH_TOKEN"
    #                             timestamp: "2025-01-03T10:30:00Z"
    #             "500":
    #                 $ref: "#/components/responses/ServerError"

    # /api/v1/auth/profile:
    #     get:
    #         tags:
    #             - Authentication
    #         summary: Get User Profile
    #         description: Get current authenticated user profile information
    #         security:
    #             - BearerAuth: []
    #         responses:
    #             "200":
    #                 description: Profile retrieved successfully
    #                 content:
    #                     application/json:
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 status:
    #                                     type: string
    #                                     example: "success"
    #                                 message:
    #                                     type: string
    #                                     example: "Profile retrieved successfully"
    #                                 data:
    #                                     $ref: "#/components/schemas/User"
    #                                 timestamp:
    #                                     type: string
    #                                     format: date-time
    #                                     example: "2025-01-03T10:30:00Z"
    #             "401":
    #                 $ref: "#/components/responses/UnauthorizedError"
    #             "500":
    #                 $ref: "#/components/responses/ServerError"

    #     put:
    #         tags:
    #             - Authentication
    #         summary: Update User Profile
    #         description: Update current authenticated user profile information
    #         security:
    #             - BearerAuth: []
    #         requestBody:
    #             required: true
    #             content:
    #                 application/json:
    #                     schema:
    #                         type: object
    #                         properties:
    #                             username:
    #                                 type: string
    #                                 minLength: 3
    #                                 maxLength: 50
    #                                 pattern: "^[a-zA-Z0-9_]+$"
    #                                 description: Unique username (alphanumeric and underscore only)
    #                                 example: "john_doe_updated"
    #                             email:
    #                                 type: string
    #                                 format: email
    #                                 description: User email address
    #                                 example: "john.updated@example.com"
    #                             full_name:
    #                                 type: string
    #                                 maxLength: 100
    #                                 description: User's full name
    #                                 example: "John Doe Updated"
    #                             phone:
    #                                 type: string
    #                                 pattern: '^[+]?[0-9\s\-\(\)]+$'
    #                                 description: Phone number
    #                                 example: "+1234567890"
    #         responses:
    #             "200":
    #                 description: Profile updated successfully
    #                 content:
    #                     application/json:
    #                         schema:
    #                             type: object
    #                             properties:
    #                                 status:
    #                                     type: string
    #                                     example: "success"
    #                                 message:
    #                                     type: string
    #                                     example: "Profile updated successfully"
    #                                 data:
    #                                     $ref: "#/components/schemas/User"
    #                                 timestamp:
    #                                     type: string
    #                                     format: date-time
    #                                     example: "2025-01-03T10:30:00Z"
    #             "400":
    #                 $ref: "#/components/responses/ValidationError"
    #             "401":
    #                 $ref: "#/components/responses/UnauthorizedError"
    #             "409":
    #                 description: Username or email already exists
    #                 content:
    #                     application/json:
    #                         schema:
    #                             $ref: "#/components/schemas/Error"
    #                         example:
    #                             status: "error"
    #                             message: "Username or email already exists"
    #                             error_code: "AUTH_DUPLICATE_DATA"
    #                             timestamp: "2025-01-03T10:30:00Z"
    #             "500":
    #                 $ref: "#/components/responses/ServerError"
