{
  message: 'Starting server initialization...',
  level: 'info',
  timestamp: '2025-06-08 18:13:15'
}
{
  message: 'Global error handlers configured successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:15'
}
{
  message: 'Express app initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Swagger documentation routes loaded successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'All middlewares and routes configured successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Starting server...',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Attempting to connect to database...',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Database connection established successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Database tables already exist, skipping sync',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Database connection successful',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Redis client connecting...',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Redis client ready and connected successfully!',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Server is running on port 3000',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Environment: development',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Health check: http://localhost:3000/health',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'API endpoints: http://localhost:3000/api',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Excel export endpoints: http://localhost:3000/api/v1/export',
  level: 'info',
  timestamp: '2025-06-08 18:13:16'
}
{
  message: 'Finding all Product records',
  level: 'info',
  timestamp: '2025-06-08 18:14:17'
}
{
  message: 'Found 5 Product records',
  level: 'info',
  timestamp: '2025-06-08 18:14:17'
}
{
  message: 'Counting Product records',
  level: 'info',
  timestamp: '2025-06-08 18:14:17'
}
{
  message: 'Product count: 13',
  level: 'info',
  timestamp: '2025-06-08 18:14:17'
}
{
  message: '::1 - - [08/Jun/2025:11:14:17 +0000] "GET /api/v1/dashboard2/products?page=1&limit=5 HTTP/1.1" 200 - "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 18:14:17'
}
{
  message: 'Cache hit for key: products:/:no-params:{"page":"1","limit":"5"}',
  level: 'info',
  timestamp: '2025-06-08 18:14:47'
}
{
  message: '::1 - - [08/Jun/2025:11:14:47 +0000] "GET /api/v1/dashboard2/products?page=1&limit=5 HTTP/1.1" 200 - "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 18:14:47'
}
{
  message: 'Finding Product with ID: 2',
  level: 'info',
  timestamp: '2025-06-08 18:15:22'
}
{
  message: 'Product found with ID: 2',
  level: 'info',
  timestamp: '2025-06-08 18:15:22'
}
{
  message: '::1 - - [08/Jun/2025:11:15:22 +0000] "GET /api/v1/dashboard2/products/2 HTTP/1.1" 200 219 "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 18:15:22'
}
{
  message: 'Transaction rolled back for POST / with status 401',
  level: 'warn',
  timestamp: '2025-06-08 18:15:45'
}
{
  message: '::1 - - [08/Jun/2025:11:15:45 +0000] "POST /api/v1/dashboard2/products HTTP/1.1" 401 90 "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 18:15:45'
}
{
  message: '::1 - - [08/Jun/2025:11:15:55 +0000] "POST /api/v1/dashboard1/auth/login HTTP/1.1" 401 68 "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 18:15:55'
}
{
  message: 'Starting server initialization...',
  level: 'info',
  timestamp: '2025-06-08 21:09:21'
}
{
  message: 'Global error handlers configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:09:21'
}
{
  message: 'Express app initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Swagger documentation routes loaded successfully',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'All middlewares and routes configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Starting server...',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Attempting to connect to database...',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Database connection established successfully',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Database tables already exist, skipping sync',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  message: 'Database connection successful',
  level: 'info',
  timestamp: '2025-06-08 21:09:23'
}
{
  errno: -4039,
  code: 'ETIMEDOUT',
  syscall: 'connect',
  address: '172.17.78.119',
  port: 6379,
  level: 'error',
  message: 'Redis client error: connect ETIMEDOUT 172.17.78.119:6379',
  stack: 'Error: connect ETIMEDOUT 172.17.78.119:6379\n' +
    '    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)',
  timestamp: '2025-06-08 21:09:44'
}
{
  message: 'SIGINT received, shutting down gracefully',
  level: 'info',
  timestamp: '2025-06-08 21:09:51'
}
{
  message: 'Starting server initialization...',
  level: 'info',
  timestamp: '2025-06-08 21:10:19'
}
{
  message: 'Global error handlers configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:19'
}
{
  message: 'Express app initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Swagger documentation routes loaded successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'All middlewares and routes configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Starting server...',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Attempting to connect to database...',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Database connection established successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Database tables already exist, skipping sync',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Database connection successful',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Redis client connecting...',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Redis client ready and connected successfully!',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Server is running on port 3000',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Environment: development',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Health check: http://localhost:3000/health',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'API endpoints: http://localhost:3000/api',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Excel export endpoints: http://localhost:3000/api/v1/export',
  level: 'info',
  timestamp: '2025-06-08 21:10:21'
}
{
  message: 'Finding all Product records',
  level: 'info',
  timestamp: '2025-06-08 21:11:18'
}
{
  message: 'Found 5 Product records',
  level: 'info',
  timestamp: '2025-06-08 21:11:18'
}
{
  message: 'Counting Product records',
  level: 'info',
  timestamp: '2025-06-08 21:11:18'
}
{
  message: 'Product count: 13',
  level: 'info',
  timestamp: '2025-06-08 21:11:18'
}
{
  message: '::1 - - [08/Jun/2025:14:11:18 +0000] "GET /api/v1/dashboard2/products?page=1&limit=5 HTTP/1.1" 200 - "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 21:11:18'
}
{
  message: 'Cache hit for key: products:/:no-params:{"page":"1","limit":"5"}',
  level: 'info',
  timestamp: '2025-06-08 21:27:28'
}
{
  message: '::1 - - [08/Jun/2025:14:27:28 +0000] "GET /api/v1/dashboard2/products?page=1&limit=5 HTTP/1.1" 200 - "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 21:27:28'
}
{
  message: 'Cache hit for key: products:/:no-params:{"page":"1","limit":"5"}',
  level: 'info',
  timestamp: '2025-06-08 21:27:29'
}
{
  message: '::1 - - [08/Jun/2025:14:27:29 +0000] "GET /api/v1/dashboard2/products?page=1&limit=5 HTTP/1.1" 200 - "-" "PostmanRuntime/7.44.0"',
  level: 'info',
  timestamp: '2025-06-08 21:27:29'
}
{
  message: 'Starting server initialization...',
  level: 'info',
  timestamp: '2025-06-08 21:48:19'
}
{
  message: 'Global error handlers configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:19'
}
{
  message: 'Express app initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Swagger documentation routes loaded successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'All middlewares and routes configured successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Starting server...',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Attempting to connect to database...',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Database connection established successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Database tables already exist, skipping sync',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Database connection successful',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Redis client connecting...',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Redis client ready and connected successfully!',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Redis service initialized successfully',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Server is running on port 3000',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Environment: development',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Health check: http://localhost:3000/health',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'API endpoints: http://localhost:3000/api',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
{
  message: 'Excel export endpoints: http://localhost:3000/api/v1/export',
  level: 'info',
  timestamp: '2025-06-08 21:48:20'
}
